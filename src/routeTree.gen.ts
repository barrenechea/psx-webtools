/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const IndexLazyRouteImport = createFileRoute('/')()
const MemoryCardManagerIndexLazyRouteImport = createFileRoute(
  '/memory-card-manager/',
)()
const MemcarduinoFlasherIndexLazyRouteImport = createFileRoute(
  '/memcarduino-flasher/',
)()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const MemoryCardManagerIndexLazyRoute =
  MemoryCardManagerIndexLazyRouteImport.update({
    id: '/memory-card-manager/',
    path: '/memory-card-manager/',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/memory-card-manager/index.lazy').then((d) => d.Route),
  )
const MemcarduinoFlasherIndexLazyRoute =
  MemcarduinoFlasherIndexLazyRouteImport.update({
    id: '/memcarduino-flasher/',
    path: '/memcarduino-flasher/',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/memcarduino-flasher/index.lazy').then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/memcarduino-flasher': typeof MemcarduinoFlasherIndexLazyRoute
  '/memory-card-manager': typeof MemoryCardManagerIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/memcarduino-flasher': typeof MemcarduinoFlasherIndexLazyRoute
  '/memory-card-manager': typeof MemoryCardManagerIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/memcarduino-flasher/': typeof MemcarduinoFlasherIndexLazyRoute
  '/memory-card-manager/': typeof MemoryCardManagerIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/memcarduino-flasher' | '/memory-card-manager'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/memcarduino-flasher' | '/memory-card-manager'
  id: '__root__' | '/' | '/memcarduino-flasher/' | '/memory-card-manager/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  MemcarduinoFlasherIndexLazyRoute: typeof MemcarduinoFlasherIndexLazyRoute
  MemoryCardManagerIndexLazyRoute: typeof MemoryCardManagerIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/memory-card-manager/': {
      id: '/memory-card-manager/'
      path: '/memory-card-manager'
      fullPath: '/memory-card-manager'
      preLoaderRoute: typeof MemoryCardManagerIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/memcarduino-flasher/': {
      id: '/memcarduino-flasher/'
      path: '/memcarduino-flasher'
      fullPath: '/memcarduino-flasher'
      preLoaderRoute: typeof MemcarduinoFlasherIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  MemcarduinoFlasherIndexLazyRoute: MemcarduinoFlasherIndexLazyRoute,
  MemoryCardManagerIndexLazyRoute: MemoryCardManagerIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
